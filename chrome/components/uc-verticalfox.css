/* Modified from https://github.com/christorange/VerticalFox/blob/main/windows/userChrome.css */
/* SIDEBERY */
/*
:root:not([customizing]) {
    .tab[selected="true"] {
        visibility: collapse;
        height: 0px;
    }

    .tabbrowser-tab {
        visibility: collapse;
        height: 0px;
    }

    .tabbrowser-tab[visuallyselected="true"] {
        visibility: collapse;
        height: 0px;
    }
}
*/
/* AUTO HIDE SIDE BAR */
#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
    position: relative;
    min-width: var(--uc-sb-sidebar-width) !important;
    width: var(--uc-sb-sidebar-width) !important;
    max-width: var(--uc-sb-sidebar-width) !important;
    --browser-area-z-index-sidebar: 3;
    z-index: 100;
}

#sidebar-box:is([positionend], [sidebar-positionend]) {
    direction: rtl;
}

/* 
 * !TEMPORARY: Firefox v140+ wraps #sidebar in .sidebar-browser-stack, breaking leftward expansion.
 * This excludes it to keep old behavior; can be simplified after v140. 
 */
#sidebar-box:is([positionend], [sidebar-positionend]) > *:not(.sidebar-browser-stack) {
    direction: ltr;
}

#sidebar-box:is([positionend], [sidebar-positionend]):-moz-locale-dir(rtl) {
    direction: ltr;
}

#sidebar-box:is([positionend], [sidebar-positionend]):-moz-locale-dir(rtl) > *:not(.sidebar-browser-stack) {
    direction: rtl;
}

#sidebar-launcher-splitter {
    display: var(--uc-sidebar-splitter-display);
}

#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
    /* Remove sidebar splitter */
    & + #sidebar-splitter {
        display: none;
    }

    /* Hide Sidebery when auto-collapse is disabled but full hiding of Sidebery or fullscreen mode is enabled */
    @media not -moz-pref("uc.flex.disable-sidebery-autohide"),
        -moz-pref("uc.flex.fully-hide-sidebery"),
        (display-mode: fullscreen) {
        :root:not([sidebar-expand-on-hover], [titlepreface*="\180e "]) & {
            #sidebar {
                will-change: min-width;
                min-width: var(--uc-sb-sidebar-width) !important;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
                @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                    transition: none !important;
                }
            }

            /* 
             * !TEMPORARY: Since Firefox v140, #sidebar is no longer a sibling of #sidebar-header.
             * Keep the "+ #sidebar" selector for compatibility with pre-v140 versions.
             * Can be removed once v140 is officially released. 
             */
            &:hover #sidebar,
            #sidebar-header:has(.active) + #sidebar,
            #sidebar-header:has(.active) + .sidebar-browser-stack #sidebar {
                min-width: var(--uc-sb-sidebar-hover-width) !important;
                transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay) !important;
            }
        }
    }
    @media -moz-pref("uc.flex.fully-hide-sidebery"), (display-mode: fullscreen) {
        :root:is([sidebar-expand-on-hover], [titlepreface*="\180e "]) & {
            #sidebar {
                will-change: min-width;
                min-width: var(--uc-sb-sidebar-width) !important;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
                @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                    transition: none !important;
                }
            }

            &:hover #sidebar,
            #sidebar-header:has(.active) + #sidebar,
            #sidebar-header:has(.active) + .sidebar-browser-stack #sidebar {
                min-width: var(--uc-sb-sidebar-hover-width) !important;
                transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay) !important;
            }
        }
    }
    @media not -moz-pref("uc.flex.fully-hide-sidebery") {
        :root:is([titlepreface*="\200c "], [titlepreface*="\200d "]) & {
            #sidebar {
                will-change: min-width;
                min-width: var(--uc-sb-sidebar-width) !important;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
                @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                    transition: none !important;
                }
            }

            &:hover #sidebar,
            #sidebar-header:has(.active) + #sidebar,
            #sidebar-header:has(.active) + .sidebar-browser-stack #sidebar {
                min-width: var(--uc-sb-sidebar-hover-width) !important;
                transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay) !important;
            }
        }
    }

    .sidebar-panel {
        background-color: transparent !important;
        color: var(--newtab-text-primary-color) !important;
    }

    .sidebar-panel #search-box {
        -moz-appearance: none !important;
        appearance: none !important;
        background-color: rgba(249, 249, 250, 0.1) !important;
        color: inherit !important;
    }

    /* Add sidebar divider and give it background */
    /*
    & #sidebar,
    & #sidebar-header {
        background-color: inherit !important;
        border-inline: 1px solid rgb(80, 80, 80);
        border-inline-width: 0px 1px;
    }
    */

    &:not(:is([positionend], [sidebar-positionend])) > :-moz-locale-dir(rtl),
    &:is([positionend], [sidebar-positionend]) > * {
        border-inline-width: 1px 0px;
    }

    /* Move statuspanel to the other side when sidebar is hovered so it doesn't get covered by sidebar */
    &:not(:is([positionend], [sidebar-positionend])):hover ~ #appcontent #statuspanel {
        inset-inline: auto 0px !important;
    }
    &:not(:is([positionend], [sidebar-positionend])):hover ~ #appcontent #statuspanel-label {
        margin-inline: 0px !important;
        border-left-style: solid !important;
    }
}
