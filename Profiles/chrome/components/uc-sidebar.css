#sidebar-box {
    max-width: calc(100% - 496px) !important;
    @media -moz-pref("sidebar.revamp") {
        max-width: calc(100% - var(--uc-sidebar-header-width) - 496px) !important;
    }
    min-width: var(--uc-sidebar-header-width) !important;
}

/* Reduce header size */
#sidebar-header {
    font-size: 1.2em !important;
    padding: 2px 6px 2px 3px !important;
}
#sidebar-header #sidebar-close {
    padding: 3px !important;
}
#sidebar-header #sidebar-close .toolbarbutton-icon {
    width: 14px;
    height: 14px;
    opacity: 0.6;
}

/* Expand sidebar header on hover */
#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
    #sidebar-header:hover {
        @media (prefers-color-scheme: light) {
            --sidebar-border-color: #ced1d4;
        }
        max-height: 100%;
        max-width: 100%;
        min-width: var(--uc-sb-sidebar-hover-width);
        background-color: var(--uc-sidebar-bgcolor);
        transition:
            border-bottom var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            max-height var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            min-height var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            max-width var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            min-width var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            padding var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            background-color var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay),
            opacity var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay);
    }

    #sidebar-header:hover :is(#sidebar-switcher-target, #sidebar-close) {
        transition: opacity var(--uc-hover-transition-duration) ease-in-out var(--uc-hover-sidebar-delay);
    }

    /* Modified from https://www.reddit.com/r/FirefoxCSS/comments/77ehp1/how_to_hide_the_title_of_webextension_sidebars/ */
    /* Minimize sidebar header to a stripe (except Bookmarks, History, Sync'd Tabs); appears normally on hover */
    #sidebar-header:not(:hover):not(:has(.active)) {
        min-height: 5px;
        max-height: 5px;
        min-width: var(--uc-sb-sidebar-width);
        overflow: hidden;
        padding: 0 !important;
        background-color: var(--uc-sb-sidebar-header-stripe);
        opacity: 0.5;
        will-change: min-height, max-height, min-width, overflow, background-color, opacity;
        transition:
            max-height var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
            min-height var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
            min-width var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
            padding var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
            background-color var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
            opacity 0ms ease-in-out 0ms;
        :is(#sidebar-switcher-target, #sidebar-close) {
            /* BAD NEWS: display: none !important; */
            opacity: 0;
            transition: opacity 0ms ease-in-out 0ms;
        }
    }

    /* When Sidebery's auto-collapse is disabled, limit the sidebar header width to the specified value */
    @media -moz-pref("uc.flex.disable-sidebery-autohide") and (not -moz-pref("uc.flex.fully-hide-sidebery")) and (not (display-mode: fullscreen)) {
        --sidebar-background-color: var(--uc-sidebar-bgcolor) !important;
        #sidebar-header:not(:hover):not(:has(.active)) {
            max-width: var(--uc-sidebar-header-width);
            min-width: var(--uc-sidebar-header-width);
        }
    }

    @media (prefers-color-scheme: dark) {
        #sidebar-header:not(:hover):not(:has(.active)) {
            opacity: 0.87;
        }
    }

    /* Remove header's bottom line */
    #sidebar-header:not(:hover) {
        border-bottom: none !important;
    }
}

@media -moz-pref("uc.flex.fully-hide-sidebery"), (display-mode: fullscreen) {
    #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
        &:hover #sidebar-header:not(:hover):not(:has(.active)) {
            min-height: 5px;
            max-height: 5px;
            min-width: var(--uc-sidebar-header-width);
            overflow: hidden;
            padding: 0 !important;
            background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 50%, var(--uc-sidebar-bgcolor));
            opacity: 1;
            will-change: min-height, max-height, min-width, overflow, background-color, opacity;
            transition:
                max-height var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
                min-height var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
                min-width var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
                padding var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
                background-color var(--uc-autohide-transition-duration) ease-in-out var(--uc-autohide-sidebar-delay),
                opacity 0ms ease-in-out 0ms;
        }

        @media (prefers-color-scheme: dark) {
            &:hover #sidebar-header:not(:hover):not(:has(.active)) {
                background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 87%, var(--uc-sidebar-bgcolor));
            }
        }
    }
}

/* Auto-hide sidebar in fullscreen or when Sidebery is fully hidden */
@media -moz-pref("uc.flex.fully-hide-sidebery"), (display-mode: fullscreen) {
    #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
        &:not(:is([positionend], [sidebar-positionend])) {
            /* Fixed position for left-side sidebar */
            position: absolute !important;
            left: 0px;
            height: calc(
                100% - (var(--uc-sb-sidebar-main-stripe-height, 0px) + var(--uc-sb-sidebar-main-margin-top, 0px))
            );
            /* Make sidebar transparent */
            opacity: 0;
            &:hover {
                /* Show sidebar on hover */
                /**
                * Extend opacity transition delay slightly (10ms) 
                * to avoid abrupt display changes when opacity changes from 0 to 1 
                */
                transition: opacity var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    calc(var(--uc-hover-sidebar-delay) + 10ms) !important;
                opacity: 1;
            }
        }

        &:is([positionend], [sidebar-positionend]) {
            /* Fixed position for right-side sidebar */
            position: absolute !important;
            right: 0px;
            height: calc(
                100% - (var(--uc-sb-sidebar-main-stripe-height, 0px) + var(--uc-sb-sidebar-main-margin-top, 0px))
            );
            opacity: 0;
            &:hover {
                /* Show sidebar on hover */
                /**
                * Extend opacity transition delay slightly (10ms) 
                * to avoid abrupt display changes when opacity changes from 0 to 1 
                */
                transition: opacity var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    calc(var(--uc-hover-sidebar-delay) + 10ms) !important;
                opacity: 1;
            }
        }
    }
}

/* 🧱══════════════════════════════════════════════════════════════════
   🧱 Revamped Sidebar
   🧱════════════════════════════════════════════════════════════════ */

@media -moz-pref("sidebar.revamp") {
    /* 🔽 [BLOCK A] Start of variable definitions for active Sidebery */
    /**
     * Used variable indirection instead of direct property under #browser:has()
     * to try for :root:has()-like perf gain; BUT actual boost ~5% — not clearly worth the cost
     * in readability and maintainability.
     */
    #browser:has(#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden])) {
        /**
         * These variables are used by both #sidebar-main and #sidebar-box to calculate offset heights,  
         * so they must be declared under their common parent element #browser. 
         */
        --uc-sb-sidebar-main-margin-top: 0px;
        --uc-sb-sidebar-main-stripe-height: 5px;
        @media -moz-pref("uc.flex.disable-bookmarks-autohide") and (not (-moz-pref("uc.flex.fully-hide-toolbox") or (display-mode: fullscreen))) {
            --uc-sb-sidebar-main-margin-top: var(--uc-bm-disable-autohide-offset);
        }
        & sidebar-main[expanded] {
            --uc-sb-sroot-padding-block-start: var(--space-small);
            --uc-sb-sroot-padding-block-end: var(--space-small);
            --uc-sb-sroot-padding-inline: 6px;
            --uc-sb-sroot-gap: var(--space-xxsmall);
        }
        & sidebar-main:not([expanded]) {
            --uc-sb-sroot-btn-padding-block-end-1: var(--space-small);
            --uc-sb-sroot-btn-padding-block-end-2: 2px;
            --uc-sb-sroot-align-items: center;
            --uc-sb-sroot-btn-padding-inline: 0;
            --uc-sb-sroot-btn-padding-block: 0.8px;
        }
        #sidebar-main {
            --uc-sb-sidebar-main-position: absolute;
            --uc-sb-sidebar-main-min-width: var(--uc-sb-sidebar-width);
            --uc-sb-sidebar-main-max-width: var(--uc-sb-sidebar-width, 75vw);
            @media -moz-pref("uc.flex.disable-sidebery-autohide") and (not -moz-pref("uc.flex.fully-hide-sidebery")) and (not (display-mode: fullscreen)) {
                --sidebar-background-color: var(--uc-sidebar-bgcolor) !important;
                --uc-sb-sidebar-main-min-width: var(--uc-sidebar-header-width);
                --uc-sb-sidebar-main-max-width: var(--uc-sidebar-header-width);
            }
            --uc-sb-sidebar-main-overflow: hidden;
            --uc-sb-sidebar-main-z-index: calc(var(--browser-area-z-index-toolbox-while-animating) + 1);
            --uc-sb-sidebar-main-hover-min-h: auto;
            --uc-sb-sidebar-main-hover-max-h: 100%;
            --uc-sb-vertical-tabs-display: none;
            --uc-sidebar-main-stripe: color-mix(
                in srgb,
                var(--uc-sb-sidebar-header-stripe) 50%,
                var(--uc-sidebar-bgcolor)
            );
            @media (prefers-color-scheme: dark) {
                --uc-sidebar-main-stripe: color-mix(
                    in srgb,
                    var(--uc-sb-sidebar-header-stripe) 87%,
                    var(--uc-sidebar-bgcolor)
                );
            }
        }
        @media -moz-pref("uc.flex.fully-hide-sidebery"), (display-mode: fullscreen) {
            #sidebar-main {
                --uc-sb-sidebar-main-opacity: 0;
            }
            #sidebar-main:hover {
                --uc-sb-sidebar-main-min-width: var(--uc-sidebar-header-width);
                --uc-sb-sidebar-main-max-width: var(--uc-sidebar-header-width);
            }
        }
    }
    @media -moz-pref("uc.flex.fully-hide-sidebery"), (display-mode: fullscreen) {
        #browser:has(
                #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]):hover
            ) {
            #sidebar-main {
                --uc-sb-sidebar-main-min-width: var(--uc-sidebar-header-width);
                --uc-sb-sidebar-main-opacity: 1;
                /**
                 * #sidebar-main normally uses `transition-delay: var(--uc-autohide-sidebar-delay)` when not hovered.
                 * To visually unify #sidebar-main and #sidebar-box transitions when only #sidebar-box is hovered,
                 * override with `var(--uc-hover-sidebar-delay)` for synced timing.
                 */
                --uc-autohide-sidebar-delay: var(--uc-hover-sidebar-delay);
                --uc-sb-sidebar-main-z-delay: var(--uc-hover-sidebar-delay);
            }
        }
    }
    /* 🔼 [BLOCK A] End of variable definitions for active Sidebery */

    /* 🔽 [BLOCK B] Start of rules for active Sidebery */
    /* When Sidebery is active, shrink the revamped sidebar into a stripe and move it above Sidebery */
    #sidebar-main {
        --bg: var(--toolbox-bgcolor);
        &:-moz-window-inactive {
            --bg: var(--toolbox-bgcolor-inactive);
        }
        position: var(--uc-sb-sidebar-main-position, static) !important;
        &:is([positionend], [sidebar-positionend]) {
            right: 0px;
        }
        margin-top: var(--uc-sb-sidebar-main-margin-top);
        z-index: var(--uc-sb-sidebar-main-z-index);
        min-height: var(--uc-sb-sidebar-main-stripe-height);
        max-height: var(--uc-sb-sidebar-main-stripe-height);
        min-width: var(--uc-sb-sidebar-main-min-width);
        max-width: var(--uc-sb-sidebar-main-max-width) !important;
        overflow: var(--uc-sb-sidebar-main-overflow, clip) !important;
        background-color: var(--uc-sidebar-main-stripe, var(--bg)) !important;
        opacity: var(--uc-sb-sidebar-main-opacity, 1);
        will-change: min-height, max-height, overflow, background-color;
        transition:
            min-height var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            max-height var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            max-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            overflow var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            background-color var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay),
            opacity var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                calc(var(--uc-autohide-sidebar-delay) + 10ms),
            /**
             * --uc-sb-sidebar-main-z-delay is undefined by default, so only the first two values apply.
             * It gets set when `uc.flex.fully-hide-sidebery` is enabled or in fullscreen mode. 
             */
                z-index 0s linear var(--uc-sb-sidebar-main-z-delay);
    }
    #sidebar-main:hover {
        min-height: var(--uc-sb-sidebar-main-hover-min-h) !important;
        max-height: var(--uc-sb-sidebar-main-hover-max-h) !important;
        max-width: var(--uc-sb-sidebar-main-max-width) !important;
        background-color: var(--bg) !important;
        opacity: 1;
        transition:
            min-height var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            max-height var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            max-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            overflow var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            background-color var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay),
            opacity var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                calc(var(--uc-hover-sidebar-delay) + 10ms),
            z-index 0s linear var(--uc-sb-sidebar-main-z-delay);
    }
    #sidebar-launcher-splitter {
        display: var(--uc-sidebar-splitter-display, flex) !important;
    }

    #sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([hidden]) {
        margin-top: calc(var(--uc-sb-sidebar-main-stripe-height) + var(--uc-sb-sidebar-main-margin-top));
        /* Remove unnecessary margin when Sidebery is placed on the right side */
        &:is([positionend], [sidebar-positionend]) {
            margin-inline-start: 0px !important;
        }
        /* Remove unwanted border and shadow applied to Sidebery by the revamped sidebar */
        padding-block-end: 0px !important;
        padding-inline-end: 0px !important;
        background-color: var(--uc-sidebar-bgcolor) !important;
        #sidebar {
            outline: none !important;
            border: none !important;
            border-radius: 0px !important;
            box-shadow: none !important;
        }
    }

    /* Remove native vertical tabs when Sidebery is active. */
    #sidebar-main #vertical-tabs {
        display: var(--uc-sb-vertical-tabs-display, flex) !important;
    }
    /* 🔼 [BLOCK B] End of rules for active Sidebery */

    /* 🔽 [BLOCK C] Start of rules for inactive Sidebery */
    /* Modified from https://github.com/MrOtherGuy/firefox-csshacks/blob/master/chrome/autohide_tabstoolbar_v2.css */
    /* be179ef */
    /* ── ▶️ Autohide vertical tabs when the sidebar is expanded */
    @media (-moz-pref("sidebar.verticalTabs")) and (not (-moz-pref("sidebar.visibility", "expand-on-hover") or -moz-pref("uc.flex.disable-native-vertical-tabs-autohide"))) {
        /**
         * The selector #sidebar-main:has(> [expanded]) has higher specificity
         * than #sidebar-main:not(:hover), so its rules will override those above.
         * Since the earlier rule is used to detect when Sidebery is active,
         * we rely on the --uc-sb-* custom variable (with fallback) to carry that logic forward.
         * This ensures that even when overridden, the correct behavior still applies
         * based on whether Sidebery is active or not.
         */
        #sidebar-main:has(> [expanded]) {
            overflow: var(--uc-sb-sidebar-main-overflow, visible) !important;
            /**
             * When the native vertical tabs are placed on the right side, 
             * set overflow to hidden to eliminate extra space. 
             */
            &:not(:hover):is([positionend], [sidebar-positionend]) {
                overflow: hidden !important;
            }
            max-width: var(
                --uc-sb-sidebar-main-max-width,
                var(--uc-sidebar-header-width)
            ) !important; /* Use !important to override the max-width styles in Nightly (v135) */
            z-index: var(--uc-sb-sidebar-main-z-index, var(--browser-area-z-index-toolbox-while-animating));
            /* This transition is already covered by the one defined above, so it's commented out. */
            /* transition: z-index 0s linear var(--uc-sb-sidebar-main-z-delay); */
            background: inherit;
        }

        sidebar-main[expanded] {
            --tab-pinned-horizontal-count: 5; /* This needs to match whatever is used in sidebar-main.css - currently 5 */
            background: inherit;
            overflow: hidden;
            /* !TEMPORARY: */
            margin-inline-start: var(--uc-sidebar-main-margin-left);
            min-width: /* var(--tab-collapsed-width) */ calc(var(--uc-sb-sidebar-main-min-width, var(--uc-sidebar-header-width)) + 5px);
            /* transition: min-width var(--uc-tabs-hide-animation-duration) ease-out var(--uc-tabs-hide-animation-delay); */
            will-change: margin-inline-start, min-width, overflow, transform;
            transition:
                margin-inline-start var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay),
                min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay),
                overflow var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay);
            /*
            border-inline: 0.01px solid var(--chrome-content-separator-color);
            border-inline-width: 0 0.01px;
            */
            &:is([positionend], [sidebar-positionend]) {
                /* Newly added 'transform' uses initial transition values as it's not defined above */
                transition-property: margin-inline-start, min-width, overflow, transform;
                border-inline-width: 0.01px 0;
            }
        }
        sidebar-main[expanded]:hover {
            min-width: var(
                --uc-sb-sidebar-main-min-width,
                calc(
                    var(--tab-pinned-horizontal-count) * var(--tab-pinned-min-width-expanded) + 2 *
                        var(--tab-pinned-container-margin-inline-expanded) + 1px
                )
            );
            /* transition-delay: 0ms !important; */
            transition:
                margin-inline-start var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay),
                min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay),
                overflow var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay),
                transform var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay);
            /**
             * Shift sidebar-main left by its extra expanded width (collapsed width - expanded width) 
             * to keep it visible when expanding from the right edge. 
             */
            &:is([positionend], [sidebar-positionend]) {
                transform: translateX(calc(11px + var(--uc-sb-sidebar-main-min-width, var(--uc-sidebar-header-width)) - 100%));
            }
        }
        /* Fix transparent background issue in vertical tabs; no longer needed in Firefox v138 and later */
        #sidebar-wrapper {
            background: inherit;
        }
    }
    /* 🔼 [BLOCK C] End of rules for inactive Sidebery */

    /* 🔽 [BLOCK D] Start of rules for active Sidebery */
    /* ── ▶️ Styles for tools-and-extensions when the sidebar is expanded */
    .tools-and-extensions.actions-list[orientation="horizontal"] {
        /* Add a divider to tools-and-extensions on hover */
        &:hover {
            &::before {
                content: "";
                position: absolute;
                top: 0;
                left: 5px;
                right: 5px;
                height: 2px;
                /*
                background-color: rgba(0, 0, 0, 0.1);
                box-shadow: 0 -10px 20px 28px rgba(0, 0, 0, 0.1);
                */
                background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 50%, var(--uc-sidebar-bgcolor));
                @media (prefers-color-scheme: dark) {
                    /*
                    background-color: rgba(255, 255, 255, 0.06);
                    box-shadow: 0 -10px 20px 28px rgba(255, 255, 255, 0.06);
                    */
                    background-color: color-mix(
                        in srgb,
                        var(--uc-sb-sidebar-header-stripe) 87%,
                        var(--uc-sidebar-bgcolor)
                    );
                }
            }
            &::after {
                content: "";
                position: absolute;
                bottom: 0;
                left: 5px;
                right: 5px;
                height: 2px;
                /*
                background-color: rgba(0, 0, 0, 0.1);
                box-shadow: 0 10px 20px 28px rgba(0, 0, 0, 0.1);
                */
                background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 50%, var(--uc-sidebar-bgcolor));
                @media (prefers-color-scheme: dark) {
                    /*
                    background-color: rgba(255, 255, 255, 0.06);
                    box-shadow: 0 10px 20px 28px rgba(255, 255, 255, 0.06);
                    */
                    background-color: color-mix(
                        in srgb,
                        var(--uc-sb-sidebar-header-stripe) 87%,
                        var(--uc-sidebar-bgcolor)
                    );
                }
            }
        }

        /* Align tools-and-extensions when Sidebery is active */
        padding-inline: var(--uc-sb-sroot-padding-inline, var(--space-medium)) !important;

        /* Adjust spacing between buttons in tools-and-extensions when Sidebery is active */
        padding-block-start: var(--uc-sb-sroot-padding-block-start, 5px);

        > moz-button[view="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"] {
            /* --button-outer-padding-block-end: 0; */
            .tools-and-extensions.actions-list:not(:hover) & {
                visibility: hidden;
            }
        }
        /*
        > moz-button {
            &:nth-last-child(2) {
                --button-outer-padding-block-start: 6px !important;
            }
        }
        */
    }

    /* ── ◀️ Styles for tools-and-extensions when the sidebar is collapsed */
    .tools-and-extensions.actions-list[orientation="vertical"] {
        /* Add a divider to tools-and-extensions on hover */
        &:hover {
            &::before {
                content: "";
                position: absolute;
                top: 0;
                left: 5px;
                right: 5px;
                height: 2px;
                /*
                background-color: rgba(0, 0, 0, 0.1);
                box-shadow: 0 -10px 20px 28px rgba(0, 0, 0, 0.1);
                */
                background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 50%, var(--uc-sidebar-bgcolor));
                @media (prefers-color-scheme: dark) {
                    /*
                    background-color: rgba(255, 255, 255, 0.06);
                    box-shadow: 0 -10px 20px 28px rgba(255, 255, 255, 0.06);
                    */
                    background-color: color-mix(
                        in srgb,
                        var(--uc-sb-sidebar-header-stripe) 87%,
                        var(--uc-sidebar-bgcolor)
                    );
                }
            }
            &::after {
                content: "";
                position: absolute;
                bottom: 0;
                left: 5px;
                right: 5px;
                height: 2px;
                /*
                background-color: rgba(0, 0, 0, 0.1);
                box-shadow: 0 10px 20px 28px rgba(0, 0, 0, 0.1);
                */
                background-color: color-mix(in srgb, var(--uc-sb-sidebar-header-stripe) 50%, var(--uc-sidebar-bgcolor));
                @media (prefers-color-scheme: dark) {
                    /*
                    background-color: rgba(255, 255, 255, 0.06);
                    box-shadow: 0 -10px 20px 28px rgba(255, 255, 255, 0.06);
                    */
                    background-color: color-mix(
                        in srgb,
                        var(--uc-sb-sidebar-header-stripe) 87%,
                        var(--uc-sidebar-bgcolor)
                    );
                }
            }
        }

        /* Align tools-and-extensions when Sidebery is active */
        align-items: var(--uc-sb-sroot-align-items, start) !important;
        > moz-button {
            --button-outer-padding-inline: var(--uc-sb-sroot-btn-padding-inline, var(--space-medium)) !important;
            --button-outer-padding-block: var(--uc-sb-sroot-btn-padding-block, var(--space-xxsmall)) !important;
        }

        /* Adjust spacing between buttons in tools-and-extensions when Sidebery is active */
        @media -moz-pref("sidebar.verticalTabs") {
            > moz-button[view="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"] {
                --button-outer-padding-block-end: var(--uc-sb-sroot-btn-padding-block-end-1);
                .tools-and-extensions.actions-list:not(:hover) & {
                    visibility: hidden;
                }
            }
        }
        > moz-button:last-of-type {
            --button-outer-padding-block-end: var(--uc-sb-sroot-btn-padding-block-end-2, var(--space-small)) !important;
        }
    }
    /* 🔼 [BLOCK D] End of rules for active Sidebery */

    /* 🔽 [BLOCK E] Start of rules for inactive Sidebery */
    @media (-moz-pref("sidebar.verticalTabs")) and (not (-moz-pref("sidebar.visibility", "expand-on-hover") or -moz-pref("uc.flex.disable-native-vertical-tabs-autohide"))) {
        /* ── ▶️ Styles for tools-and-extensions when the sidebar is expanded */
        /**
         * Use variables to pass values into the shadow trees. 
         * These scoped variables are only defined within #vertical-pinned-tabs-container.
         * While the style applies globally to matching <slot> elements, it only takes effect here.
         * Other instances of slot[part="items-wrapper"] are not grid containers, so they're unaffected.

         * Ensure pinned tabs are laid out in 5 columns even when collapsed,
         * so expanding them doesn't shift the container height and cause the tabs to jump,
         * which would require users to reposition their mouse.
         * Requires Firefox v138+. 
         */
        #sidebar-main[sidebar-launcher-expanded] sidebar-main[expanded] #vertical-pinned-tabs-container {
            --uc-vt-sroot-grid-template-columns: repeat(5, auto);
        }
        spacer[part="overflow-start-indicator"]
            + scrollbox[part="scrollbox"][orient="vertical"]
            > slot[part="items-wrapper"] {
            grid-template-columns: var(--uc-vt-sroot-grid-template-columns, inherit) !important;
        }
        /* Same purpose as above, but for Firefox v137 and below. */
        #sidebar-main:not([sidebar-launcher-expanded]) sidebar-main[expanded] #vertical-pinned-tabs-container {
            grid-template-columns: repeat(5, auto) !important;
        }
        /* Hide the vertical scrollbar when pinned tabs are collapsed. */
        /*
            spacer[part="overflow-start-indicator"] + scrollbox[part="scrollbox"] {
                overflow-y: var(--uc-sroot-overflow, inherit) !important;
            }
        */
        .tools-and-extensions.actions-list[orientation="horizontal"] {
            /*
            --button-outer-padding-block-start: 2px !important;
            */
            padding-block-end: var(--uc-sb-sroot-padding-block-end, 2px) !important;
            gap: var(--uc-sb-sroot-gap, 0px) !important;
        }
        /* ── ◀️ Styles for tools-and-extensions when the sidebar is collapsed */
        .tools-and-extensions.actions-list[orientation="vertical"] {
            overflow: hidden !important;
            & > moz-button {
                --button-outer-padding-inline: 5.5px !important;
                /*
                --button-outer-padding-block-start: 2px !important;
                --button-outer-padding-block-end: 2px !important;
                padding-left: 5.5px;
                */
            }
        }
    }
    /* 🔼 [BLOCK E] End of rules for inactive Sidebery */

    /* 🔽 [BLOCK F] Start of rules unrelated to Sidebery */
    /**
     * Increase the z-index of the navigation bar in fullscreen mode  
     * to prevent it from being obscured by the revamped sidebar.
     */
    :root[inFullscreen] {
        #navigator-toolbox {
            z-index: calc(var(--browser-area-z-index-toolbox-while-animating) + 1) !important;
        }
    }

    /* Dark theme specific styles */
    /*
    @media (prefers-color-scheme: dark) {
        #sidebar-main {
            background-image: none !important;
        }

        #sidebar-box {
            --sidebar-border-color: transparent;
            background-image: none !important;
        }

        #tabbrowser-tabbox {
            outline: none !important;
            box-shadow: var(--content-area-shadow);
        }
    }
    */

    /* Light theme specific styles */
    /*
    @media (prefers-color-scheme: light) {
        #sidebar-main,
        #sidebar-box {
            background-image: none !important;
        }
    }
    */

    /* Remove the border and rounded corners from the webpage content area */
    #tabbrowser-tabbox {
        outline: none !important;
        box-shadow: none !important;
        border-radius: 0px !important;
    }
}

/* Reposition nav-bar window controls when native vertical tabs are enabled */
@media -moz-pref("sidebar.verticalTabs") {
    :root:not([inFullscreen]) #nav-bar > .titlebar-buttonbox-container {
        margin-top: 2px;
    }

    :root[inFullscreen] #nav-bar > .titlebar-buttonbox-container {
        margin-top: 0px;
    }
}
/* 🔼 [BLOCK F] End of rules unrelated to Sidebery */

/* 🧱══════════════════════════════════════════════════════════════════
   🧱 Vertical Tabs
   🧱════════════════════════════════════════════════════════════════ */

/* 🔽 [BLOCK G] Start of rules for inactive Sidebery */
@media (-moz-pref("sidebar.verticalTabs")) and (not (-moz-pref("sidebar.visibility", "expand-on-hover") or -moz-pref("uc.flex.disable-native-vertical-tabs-autohide"))) {
    /* ── ▶️ Styles for verticalTabs when the sidebar is expanded */
    /**
     * Controls how many rows of pinned tab icons can be shown in vertical tab panel.
     * This affects how many pinned tabs are visible before scrolling appears.
     */
    sidebar-main[expanded] #vertical-pinned-tabs-container {
        max-height: calc(
            var(--uc-max-visible-vertical-pinned-tabs) * var(--tabstrip-min-height) + var(--space-large) + 15px
        ) !important;
    }
    #tabbrowser-tabs[orient="vertical"] #tabbrowser-arrowscrollbox[orient="vertical"] .tabbrowser-tab {
        padding-block: 0px !important;
    }
    @media -moz-pref("uc.flex.show-pin-tabs-separator-in-expanded-state") {
        /* Show pin tabs separator in expanded state */
        #tabbrowser-tabs[expanded] > #vertical-pinned-tabs-container-separator {
            display: block !important;
        }
        /* Hide pin tabs separator in expanded state with no pin tabs */
        #vertical-pinned-tabs-container:empty + #vertical-pinned-tabs-container-separator {
            display: none !important;
        }
    }

    sidebar-main[expanded]:hover {
        #tabbrowser-tabs[orient="vertical"] tab-group .tab-group-label {
            padding-inline: 2px !important;
            max-width: 100% !important;
        }
        .tabbrowser-tab .tab-stack {
            min-width: 100%;
        }
        .tabbrowser-tab .tab-background {
            max-width: 100% !important;
        }
        #tabbrowser-tabs[orient="vertical"]::after {
            width: calc(
                var(--tab-pinned-horizontal-count) * var(--tab-pinned-min-width-expanded) + 2 *
                    var(--tab-pinned-container-margin-inline-expanded) - 22px
            );
        }
        @media -moz-pref("uc.flex.show-pin-tabs-separator-in-expanded-state") {
            #tabbrowser-tabs[expanded] > #vertical-pinned-tabs-container-separator {
                width: calc(
                    var(--tab-pinned-horizontal-count) * var(--tab-pinned-min-width-expanded) + 2 *
                        var(--tab-pinned-container-margin-inline-expanded) - 22px
                );
            }
        }
    }

    sidebar-main[expanded]:not(:hover) {
        #tabbrowser-tabs[orient="vertical"] .tabbrowser-tab {
            transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay) !important;
        }
        :is(.tab-label-container .tab-text, .tab-close-button) {
            visibility: collapse;
            transition-delay: var(--uc-autohide-sidebar-delay);
        }

        .toolbarbutton-text {
            visibility: hidden;
            transition-delay: var(--uc-autohide-sidebar-delay);
        }

        #vertical-pinned-tabs-container {
            /* --uc-sroot-overflow: hidden; */

            .tabbrowser-tab .tab-stack {
                min-width: 40px;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay);
            }
        }

        #tabbrowser-tabs[orient="vertical"] tab-group .tab-group-label {
            padding-inline: 2px !important;
            max-width: 28px !important;
            transition: max-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay) !important;
        }
        #tabbrowser-tabs[orient="vertical"] tab-group > .tabbrowser-tab {
            margin-inline-start: 0px !important;
            transition:
                margin-inline-start var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay),
                min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
            .tab-group-line {
                visibility: hidden;
                transition-delay: var(--uc-autohide-sidebar-delay);
            }
        }
        #tabbrowser-arrowscrollbox .tabbrowser-tab .tab-background {
            max-width: 32px;
            transition: max-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay);
        }
        #tabbrowser-tabs[orient="vertical"]::after {
            width: 32px;
            transition: width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay);
        }
        @media -moz-pref("uc.flex.show-pin-tabs-separator-in-expanded-state") {
            #tabbrowser-tabs[expanded] > #vertical-pinned-tabs-container-separator {
                width: 32px !important;
                transition: width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay);
            }
        }
        /* Move the container tab indicator to the right for Firefox v138 */
        /*
            .tabbrowser-tab[usercontextid] > .tab-stack > .tab-background > .tab-context-line {
                #vertical-pinned-tabs-container &,
                #tabbrowser-tabs[orient="vertical"] & {
                    position: absolute;
                    height: calc(100% - 4px);
                    margin: 0;
                    inset-inline-end: calc(100% - 50px) !important;
                    transition: inset-inline-end var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type) 
                        var(--uc-autohide-sidebar-delay);
                }
            }
        */
    }

    /* ── ◀️ Styles for verticalTabs when the sidebar is collapsed */
    #tabbrowser-tabs[orient="vertical"]:not([expanded]) {
        --tab-inline-padding: calc((var(--tab-collapsed-width) - var(--icon-size-default)) / 2 - 0.5px) !important;
        --tab-collapsed-width: var(--uc-sidebar-header-width) !important;
        width: var(--uc-sidebar-header-width) !important;
        .tab-background {
            margin-inline: 5px !important;
        }
        .tab-close-button {
            width: 14px !important;
            height: 14px !important;
            top: -1px !important;
            inset-inline-start: 0px !important;
        }
    }
    sidebar-main:not([expanded]) {
        #vertical-tabs-newtab-button {
            margin-inline: 5.5px !important;
        }
        /* Move the container tab indicator to the left for Firefox v138 */
        /*
            .tabbrowser-tab[usercontextid] > .tab-stack > .tab-background > .tab-context-line {
                #vertical-pinned-tabs-container &,
                #tabbrowser-tabs[orient="vertical"] & {
                    position: absolute;
                    height: calc(100% - 4px);
                    margin: 0;
                    inset-inline-end: calc(100% - 7px) !important;
                    margin-inline-end: 0 !important;
                }
            }
            */
    }
}
/* 🔼 [BLOCK G] End of rules for inactive Sidebery */

/* 🔽 [BLOCK H] Start of rules unrelated to Sidebery */
/**
 * This section contains code originally sourced from the firefox-gx project.
 * Source: https://github.com/Godiesc/firefox-gx
 * Author: @Godiesc
 * 
 * This code is made available under the Mozilla Public License v. 2.0.
 * For license terms, see LICENSES/MPL-2.0.txt or visit https://www.mozilla.org/MPL/2.0/
 *
 * Modifications made by yuuqilin, marked where applicable.
 */

/**
 * .wrapper and .actions-list only appear in #sidebar-main's shadow DOM, 
 * so styling them directly is safe. 
 */

/* Autohide tools-and-extensions when verticalTabs are enable */
@media -moz-pref("sidebar.verticalTabs") {
    /* Autohide tools except for the last one 'configuration' */
    .tools-and-extensions.actions-list[orientation="vertical"]:not(:hover)
        moz-button[type="icon ghost"]:not(:last-child),
    .tools-and-extensions.actions-list[orientation="horizontal"]:not(:hover)
        moz-button[type="icon ghost"]:not(:first-child) {
        opacity: 0 !important;
        transform: translateY(10px) !important;
        visibility: collapse !important;
        transition:
            opacity 0.2s ease-in-out,
            visibility 0.2s ease,
            transform 0.4s ease;
    }

    .tools-and-extensions.actions-list[orientation="vertical"]:hover moz-button[type="icon ghost"]:not(:last-child),
    .tools-and-extensions.actions-list[orientation="horizontal"]:hover moz-button[type="icon ghost"]:not(:first-child) {
        opacity: 1 !important;
        transform: translateY(0px) !important;
        visibility: visible !important;
        transition:
            opacity 0.2s ease-in-out,
            visibility 0.2s ease,
            transform 0.4s ease;
    }

    /* Hide 'configuration' button when other tool is open */
    .wrapper:has(.tools-and-extensions.actions-list[orientation="vertical"] moz-button[type="icon"])
        .tools-and-extensions.actions-list:not(:hover)
        moz-button[type="icon ghost"]:is(:last-child),
    .wrapper:has(.tools-and-extensions.actions-list[orientation="horizontal"] moz-button[type="icon"])
        .tools-and-extensions.actions-list:not(:hover)
        moz-button[type="icon ghost"]:is(:first-child) {
        opacity: 0 !important;
        visibility: collapse !important;
        transform: translateY(10px) !important;
        transition:
            opacity 0.2s ease-in-out,
            visibility 0.2s ease,
            transform 0.4s ease;
    }

    .wrapper:has(.tools-and-extensions.actions-list[orientation="vertical"] moz-button[type="icon"])
        .tools-and-extensions.actions-list:is(:hover)
        moz-button[type="icon ghost"]:is(:last-child),
    .wrapper:has(.tools-and-extensions.actions-list[orientation="horizontal"] moz-button[type="icon"])
        .tools-and-extensions.actions-list:is(:hover)
        moz-button[type="icon ghost"]:is(:first-child) {
        opacity: 1 !important;
        visibility: visible !important;
        transform: translateY(0px) !important;
        transition:
            opacity 0.2s ease-in-out,
            visibility 0.2s ease,
            transform 0.4s ease;
    }

    /* Active tool always in the last position */
    .tools-and-extensions.actions-list[orientation="vertical"] moz-button[type="icon"] {
        order: 1 !important;
    }
    .tools-and-extensions.actions-list[orientation="horizontal"] moz-button[type="icon"] {
        order: -1 !important;
    }
}
/* 🔼 [BLOCK H] End of rules unrelated to Sidebery */
